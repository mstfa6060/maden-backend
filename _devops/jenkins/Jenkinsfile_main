pipeline {
    agent any

    environment {
        TAG = "${BUILD_NUMBER}-${env.GIT_COMMIT.substring(0, 6)}"
    }

    stages {
        stage('Hazƒ±rlƒ±k - Web/Mobile klas√∂rlerini olu≈ütur') {
            steps {
                sh '''
                    mkdir -p ./_devops/tmp/webapp
                    mkdir -p ./_devops/tmp/mobileapp
                    cp -r /maden/maden-frontend/common ./_devops/tmp/webapp/
                    cp -r /maden/mobileapp/common ./_devops/tmp/mobileapp/
                '''
            }
        }

        stage('Docker Image Build - Docs Generator') {
            steps {
                withCredentials([
                    sshUserPrivateKey(
                        credentialsId: 'mobileapp-deploy-key',
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USERNAME'
                    ),
                    usernamePassword(
                        credentialsId: 'dockerhub-credentials',
                        usernameVariable: 'USERNAME',
                        passwordVariable: 'PASSWORD'
                    )
                ]) {
                    sh '''
                        mkdir -p _devops/ssh
                        cp "$SSH_KEY_PATH" _devops/ssh/id_rsa_mobileapp
                        chmod 600 _devops/ssh/id_rsa_mobileapp

                        docker build -t registry.git.hirovo.com.tr/arfblocks-cli:$TAG \
                        --build-arg git_username=$USERNAME \
                        --build-arg git_password=$PASSWORD \
                        -f _devops/docker/Dockerfile-api-doc-generator .
                    '''
                }
            }
        }

stage('√áƒ±ktƒ±larƒ± Host‚Äôa Kopyala - Hirovo') {
    steps {
        sh '''
            docker run --rm \
                -v $PWD/_devops/tmp/webapp:/out \
                registry.git.hirovo.com.tr/arfblocks-cli:$TAG \
                cp -r /maden/backend/_devops/tmp/webapp/common/hirovo-api/src/api/business_modules/hirovo /out || true
        '''
    }
}

stage('√áƒ±ktƒ±larƒ± Host‚Äôa Kopyala - IAM') {
    steps {
        sh '''
            docker run --rm \
                -v $PWD/_devops/tmp/webapp:/out \
                registry.git.hirovo.com.tr/arfblocks-cli:$TAG \
                cp -r /maden/backend/webapp/common/hirovo-api/src/api/base_modules/iam /out || true
        '''
    }
}


        stage('Push ArfBlocks Dok√ºmantasyonlarƒ±') {
            steps {
                withCredentials([
                    sshUserPrivateKey(
                        credentialsId: 'mobileapp-deploy-key',
                        keyFileVariable: 'SSH_KEY_PATH',
                        usernameVariable: 'SSH_USERNAME'
                    )
                ]) {
                    sh '''
                        export GIT_SSH_COMMAND="ssh -i $SSH_KEY_PATH -o StrictHostKeyChecking=no"

                        # Frontend (webapp) g√ºncelle
                        cd _devops/tmp/webapp
                        git init
                        git remote remove origin || true
                        git remote add origin git@github.com:mstfa6060/maden-frontend.git
                        git checkout -B main
                        git config user.name "CI/CD-BOT"
                        git config user.email "bot@hirovo.com"
                        if [ -n "$(git status --porcelain)" ]; then
                            git add .
                            git commit -m "üì¶ API dok√ºmantasyonu g√ºncellendi - $TAG"
                            git push origin main --force
                        fi

                        # Mobil g√ºncelle
                        cd ../mobileapp
                        git init
                        git remote remove origin || true
                        git remote add origin git@github.com:mstfa6060/mobileapp.git
                        git checkout -B main
                        git config user.name "CI/CD-BOT"
                        git config user.email "bot@hirovo.com"
                        if [ -n "$(git status --porcelain)" ]; then
                            git add .
                            git commit -m "üì¶ Mobil API dok√ºmantasyonu g√ºncellendi - $TAG"
                            git push origin main --force
                        fi
                    '''
                }
            }
        }

        stage('Bitti') {
            steps {
                echo '‚úÖ Jenkinsfile_doc_generator ba≈üarƒ±yla tamamlandƒ±.'
            }
        }
    }

    post {
        always {
            echo '‚èπ Pipeline Completed'
        }
        failure {
            echo '‚ùå Pipeline Failed'
        }
    }
}
