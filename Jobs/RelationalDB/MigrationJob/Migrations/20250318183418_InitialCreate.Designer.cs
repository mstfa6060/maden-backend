// <auto-generated />
using System;
using Jobs.RelationalDB.MigrationJob;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jobs.RelationalDB.MigrationJob.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250318183418_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleCategory")
                        .HasColumnType("int");

                    b.Property<int>("ModuleType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.RelSystemUserModule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemAdminId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("SystemAdminId");

                    b.ToTable("AppRelSystemUserModules");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCompanyAdminPermitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEndUserPermitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEveryoneAllowed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsModuleAdminPermitted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemAdminPermitted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namespace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.ToTable("AppResources");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystemRole")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1d5b3e4-8e5a-4b3c-9ef5-d3e5a3b7c1f8"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1191),
                            IsDeleted = false,
                            IsSystemRole = true,
                            Name = "Admin",
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1194)
                        },
                        new
                        {
                            Id = new Guid("b3f8a7d1-4e2c-4a3e-8b5a-d3e7b9c5e2f1"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1211),
                            IsDeleted = false,
                            IsSystemRole = true,
                            Name = "Employer",
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1212)
                        });
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.RolePermission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Permission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c9beb6e-8580-429d-a326-aede5a63f7bb"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1381),
                            IsDeleted = false,
                            Permission = "ManageUsers",
                            RoleId = new Guid("a1d5b3e4-8e5a-4b3c-9ef5-d3e5a3b7c1f8"),
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1381)
                        },
                        new
                        {
                            Id = new Guid("0303bda1-176c-40d2-bee5-bc30bd244efa"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1385),
                            IsDeleted = false,
                            Permission = "ManageRoles",
                            RoleId = new Guid("a1d5b3e4-8e5a-4b3c-9ef5-d3e5a3b7c1f8"),
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1385)
                        },
                        new
                        {
                            Id = new Guid("b320166d-d769-4902-ad2d-66f00d53bff0"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1421),
                            IsDeleted = false,
                            Permission = "PostJobs",
                            RoleId = new Guid("b3f8a7d1-4e2c-4a3e-8b5a-d3e7b9c5e2f1"),
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1421)
                        },
                        new
                        {
                            Id = new Guid("4b2a3c91-aeb7-4665-8154-8bbe4227792d"),
                            CreatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1429),
                            IsDeleted = false,
                            Permission = "ViewWorkers",
                            RoleId = new Guid("b3f8a7d1-4e2c-4a3e-8b5a-d3e7b9c5e2f1"),
                            UpdatedAt = new DateTime(2025, 3, 18, 18, 34, 18, 566, DateTimeKind.Utc).AddTicks(1429)
                        });
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.SystemAdmin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAllModulePermitted")
                        .HasColumnType("bit");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AppSystemAdmins");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthAccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthRefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LastKnownLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("LastKnownLongitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastLocationUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserSource")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.RelSystemUserModule", b =>
                {
                    b.HasOne("Common.Definitions.Domain.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Definitions.Domain.Entities.SystemAdmin", "SystemAdmin")
                        .WithMany("RelSystemUserModules")
                        .HasForeignKey("SystemAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");

                    b.Navigation("SystemAdmin");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Resource", b =>
                {
                    b.HasOne("Common.Definitions.Domain.Entities.Module", "Module")
                        .WithMany("Resource")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Module");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.RolePermission", b =>
                {
                    b.HasOne("Common.Definitions.Domain.Entities.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Common.Definitions.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Definitions.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Module", b =>
                {
                    b.Navigation("Resource");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Common.Definitions.Domain.Entities.SystemAdmin", b =>
                {
                    b.Navigation("RelSystemUserModules");
                });
#pragma warning restore 612, 618
        }
    }
}
